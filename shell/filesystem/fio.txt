fio测试工具支持同步(pread/pwrite)和异步(libaio)FIO是测试IOPS的非常好的工具，用来对硬件进行压力测试和验证，支持13种不同的I/O引擎，包括:sync,mmap, libaio, posixaio, SG v3, splice, null, network, syslet, guasi, solarisaio 等等。 
fio 官网地址：http://freshmeat.net/projects/fio/ 
一，FIO安装 
wget http://brick.kernel.dk/snaps/fio-2.0.7.tar.gz 
yum install libaio-devel -y 
tar -zxvf fio-2.0.7.tar.gz 
cd fio-2.0.7 
make 
make install 
如果出现下面的错误：
CC gettime.o In file included from fio.h:23, from gettime.c:8: os/os.h:15:20: error: libaio.h: No such file or directory In file included from gettime.c:8: fio.h:119: error: field 'iocb' has incomplete type make: *** [gettime.o] Error 1
二，随机读测试： 
随机读： 
fio -filename=/dev/sdb1 -direct=1 -iodepth 1 -thread -rw=randread -ioengine=psync -bs=16k -size=200G -numjobs=10 -runtime=1000 -group_reporting -name=mytest 
顺序读： 
fio -filename=/dev/sdb1 -direct=1 -iodepth 1 -thread -rw=read -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 
随机写： 
fio -filename=/data/test -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=psync -bs=4k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest_4k_200G_randwrite 
顺序写： 
fio -filename=/dev/sdb1 -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 
混合随机读写： 
fio -filename=/dev/sdb1 -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=100 -group_reporting -name=mytest -ioscheduler=noop 
同步i/o（顺序写）测试：
fio -filename=/data/test -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=4k -size=50G -numjobs=10 -runtime=1000 -group_reporting -name=mytest
异步i/o(顺序写)测试：
fio -filename=/data/test -direct=1 -iodepth 1 -thread -rw=write -ioengine=libaio -bs=4k -size=50G -numjobs=10 -runtime=1000 -group_reporting -name=mytest 
说明： 
filename=/dev/sdb1 测试文件名称，通常选择需要测试的盘的data目录。 
direct=1 测试过程绕过机器自带的buffer。使测试结果更真实。 
rw=randwrite 测试随机写的I/O 
rw=randrw 测试随机写和读的I/O 
bs=16k 单次io的块文件大小为16k 
bsrange=512-2048 同上，提定数据块的大小范围 
size=5g 本次的测试文件大小为5g，以每次4k的io进行测试。 
numjobs=30 本次的测试线程为30. 
runtime=1000 测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止。 
ioengine=psync io引擎使用pync方式 
rwmixwrite=30 在混合读写的模式下，写占30% 
group_reporting 关于显示结果的，汇总每个进程的信息。 
lockmem=1g 只使用1g内存进行测试。 
zero_buffers 用0初始化系统buffer。 
nrfiles=8 每个进程生成文件的数量。 
psync  同步i/o测试
libaio  异步i/o测试
结果总结：
例如：
read : io（测试了1G的数据）=1024.0MB, bw（带宽）=139643KB/s, iops（每秒钟的IO数）=136 , runt（总运行时间）=  7509msec


CEPH
fio -filename=/dev/rbd0 -bs=64k -ioengine=libaio -iodepth=32 -numjobs=4 -direct=1 -thread -rw=randwrite -size=200G -runtime=50 -group_reporting -name=test
	
fio -filename=/dev/rbd0 -bs=64k -ioengine=libaio -iodepth=32 -numjobs=4 -direct=1 -thread -rw=randread -size=200G -runtime=50 -group_reporting -name=test